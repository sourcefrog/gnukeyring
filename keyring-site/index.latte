{\page 
  \pageid=index \pagetitle=introduction
  \rcsid=\"$Id$\"
{

  {\table \align=center \width=50% \border=0 {\tr {\td
    {\div
      Cypherpunks write code. We know that someone has to write software
      to defend privacy, and since we can't get privacy unless we all do,
      we're going to write it. We publish our code so that our fellow
      Cypherpunks may practice and play with it. Our code is free for all
      to use, worldwide. We don't much care if you don't approve of the
      software we write. We know that software can't be destroyed and that
      a widely dispersed system can't be shut down.}
    
    {\div \align=right -- {\externallink \href=http://www.activism.net/cypherpunk/manifesto.html
	  The Cypherpunk Manifesto}}
  }}}

  {\h2 introduction}

  GNU Keyring lets you securely store digital secret keys on your
  PalmOS (PalmPilot, Visor, WorkPad) handheld computer.  Many people
  use Keyring to store

  {\ul
    {\li Computer account passwords}
    {\li Credit card numbers}
    {\li GnuPG or PGP passphrases}
    {\li SKey one-time-pads}
    {\li Phone banking keywords}
  }

  Other features include:

  {\ul 
    {\li Secure triple-DES encryption using a 112-bit key derived from
     the password}
    {\li Open Source Software: no back doors, no license fees}
    {\li English, German, Spanish and Swedish localized versions}
    {\li Export records to the Memo Pad}
  }

  {\h2 user's guide}

GNU Keyring stores records called "keys", each of which can contain 

{\ul 
  {\li A non-secret name for the key}
  {\li An account name}
  {\li A password}
  {\li Free-form notes}
}

The name is shown in the list view even when the database is
locked, so it should contain enough information to let you identify
the record, but nothing confidential.  If no name is assigned, a
stable unique ID is shown instead.

The keyring is secured by a {\em master password}.  To view or edit
records, you must enter the master password.  The master password may
be changed through the "Set Password" command in the list view.

For your convenience, the keyring can stay unlocked for a time
after you enter your master password.  You can configure this
behaviour through the "Preferences" command.  

The keyring always locks itself again when you switch to another
application.  This seems necessary for security, to make sure that the
encryption key is not kept unencrypted in memory and out of the
program's control.

When you need to set a password, GNU Keyring can generate a random
password of specified length, optionally including letters, numbers or
symbols.  Use the "Generate Password" command in the key edit form to
do this.

{\h2 how to use}

    To keep your data secure:

    {\ul
      {\li Choose a master password of at least 6 characters,
      preferably including non-alphanumeric characters.}

      {\li Make backups only onto secure computers.}
    }

{\h2 security information}

This product contains no cryptographic algorithms.  It does call
through a standard system trap method into code that may already be 
present in your version of PalmOS.

In general, Palm application databases are not protected on the
Hotsync PC, even if they contain private records.  Confidential data
therefore is visible to anyone who can read that file on the PC.
However, GNU Keyring encrypts all data except when it is actually
being edited.

The master password is not stored in the database.  Instead, an
MD5 hash of the password and a random 32-bit salt is stored and
checked against entered values.

    The master password is also used to generate a record encryption key.
    The 128-byte MD5 hash of the master password is spilt into two
    64-bit keys, {\em K1} and {\em K2}.  (DES ignores the top bit of
    each byte, so the key has 112 effective unknown bits.) These are
    used to generate record data encrypted as {\em Enc(K1, Dec(K2,
    Enc(K1, Data)))}.  Each 8-byte data block is independently
    encrypted by the same key.

    PalmOS does not have memory protection between applications: a
    hostile application or PC-based conduit could read information
    from inside the Keyring database.  Keeping records encrypted
    provides some protection, but it is far from impossible.  GNU
    Keyring attempts to overwrite memory containing sensitive data
    after use, but this only gives partial protection.

    The PalmOS pseudorandom number generator is used to generate
    random passwords; it may be predictable.

    You should only Hotsync to trusted computers.  It would be
    possible to (for example) put a trojan on the PC that grabbed the
    handheld's memory image, or that installed a trojan onto the
    handheld.  To avoid trojan versions, please {\pagelink
    \pageid=download download} from a {\pagelink \pageid=mirrors
    mirror site} and check the GnuPG signature.  

} }
