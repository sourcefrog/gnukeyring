Attack-tree of risks to the security of GNU Keyring
Copyright 1999 by Martin Pool <mbp@humbug.org.au>
$Id$

See Bruce Schneier's recent DDJ article discussing this style of
analysis.

GOAL: User's secrets are stolen from Keyring
  = Stolen from PC
    = Attacker gets access to user's PC
      = Local access
      | Authorized root access (personal data on work machine)
      | Break in through network
      | PC backed up to insecure location
    & Attacker can steal data once on PC
      = Stolen from inside encrypted data
        = Guess master key
	| Try all reasonable passwords (easy)
        | Encryption algorithm is wrongly implemented
        | DES3 can be broken
      | Back door to steal from handheld
  | Stolen from handheld
    = Stolen while connected
    | Stolen while not connected
      = Introduce trojan into handheld
        = Break into user's PC
        | Put trojan functionality into a downloaded app
      | Read over user's shoulder

A major weakness is that people are likely to use passwords of at most
eight characters -- and even eight is quite a pain to graffiti into a
handheld every time you need the data.  So, rather than 112bits of
entropy, we have about 5 * 8 = 40, which is not all that hard to
search on a PC.  

Of course, this can be avoided by only backing up to secure PCs, but
this may be a bit hard for some people.

Perhaps we could usefully and honestly offer a program to break the
database in case of forgotten passwords.
